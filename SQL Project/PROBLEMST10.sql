USE HEALTHCARETABLES;
-- Project Healthcare10 SQL stored routines - 1
-- PROBLEM 1
CREATE VIEW PROB101 AS
(
SELECT IP.COMPANYID, IP.PLANNAME, DI.DISEASENAME, COUNT(TR.TREATMENTID) "COUNT1", DENSE_RANK() OVER(PARTITION BY IP.COMPANYID, IP.PLANNAME ORDER BY COUNT(TR.TREATMENTID) DESC) "DENSERANK" FROM INSURANCEPLAN IP INNER JOIN CLAIM CL ON IP.UIN = CL.UIN 	
INNER JOIN TREATMENT TR ON TR.CLAIMID = CL.CLAIMID 
INNER JOIN DISEASE DI ON DI.DISEASEID = TR.DISEASEID
GROUP BY IP.COMPANYID, IP.PLANNAME, DI.DISEASENAME ORDER BY 1,2,4 DESC
);

DROP PROCEDURE IF EXISTS PROB101;
DELIMITER $$
CREATE PROCEDURE PROB101(COMPID INT)
BEGIN
SELECT PLANNAME, SUM(COUNT1) "TOTAL TREATMENTS", (SELECT DISEASENAME FROM PROB101 WHERE PLANNAME = PR.PLANNAME  AND DENSERANK = 1 LIMIT 1) "DISEASENAME1" FROM PROB101 PR WHERE COMPANYID = COMPID GROUP BY PLANNAME; 
END $$
DELIMITER ;
CALL PROB101(1839);

-- PROBLEM 2
DROP PROCEDURE IF EXISTS PROB102;
DELIMITER $$
CREATE PROCEDURE PROB102(DISNAME VARCHAR(20))
BEGIN
SELECT PHARMACYNAME, YEAR, RANK1 FROM
( 
SELECT YEAR(TR.DATE) "YEAR", DI.DISEASENAME, PR.PHARMACYID, PH.PHARMACYNAME, COUNT(TR.PATIENTID) "COUNT1", ROW_NUMBER() OVER(PARTITION BY YEAR(TR.DATE), DI.DISEASENAME ORDER BY COUNT(TR.PATIENTID) DESC) "RANK1" FROM PHARMACY PH INNER JOIN PRESCRIPTION PR ON PR.PHARMACYID = PH.PHARMACYID
INNER JOIN TREATMENT TR ON TR.TREATMENTID = PR.TREATMENTID
INNER JOIN DISEASE DI ON DI.DISEASEID = TR.DISEASEID
WHERE YEAR(TR.DATE) IN ("2021", "2022") GROUP BY DI.DISEASENAME, PR.PHARMACYID, YEAR ORDER BY 1, 2, 5 DESC
) A WHERE RANK1 IN (1, 2, 3) AND DISEASENAME = DISNAME;
END $$
DELIMITER ;
CALL PROB102("Asthma");

-- PROBLEM 3
CREATE VIEW PROB102PAT AS
(
SELECT AD.STATE, COUNT(PA.PATIENTID) "PATIENTCOUNT" FROM ADDRESS AD INNER JOIN PERSON PE ON PE.ADDRESSID = AD.ADDRESSID
INNER JOIN PATIENT PA ON  PA.PATIENTID = PE.PERSONID GROUP BY AD.STATE ORDER BY 1
);

CREATE VIEW PROB102COMP AS
( 
SELECT AD.STATE, COUNT(IC.COMPANYID) "COMPANYCOUNT" FROM ADDRESS AD INNER JOIN INSURANCECOMPANY IC ON IC.ADDRESSID = AD.ADDRESSID
GROUP BY AD.STATE ORDER BY 1
);

DROP PROCEDURE IF EXISTS PROB102;
DELIMITER $$
CREATE PROCEDURE PROB102 (STATE1 VARCHAR(10))
BEGIN 
DECLARE V1 NUMERIC(20,5);
SELECT AVG(ALLRATIO) INTO V1 FROM (SELECT PAT.PATIENTCOUNT/COMP.COMPANYCOUNT "ALLRATIO" FROM PROB102PAT PAT INNER JOIN PROB102COMP COMP ON PAT.STATE = COMP.STATE) A;
SELECT PAT.STATE, PAT.PATIENTCOUNT, COMP.COMPANYCOUNT, PAT.PATIENTCOUNT/COMP.COMPANYCOUNT "STATERATIO", V1, CASE WHEN PAT.PATIENTCOUNT/COMP.COMPANYCOUNT < V1 THEN "RECOMMENDED" ELSE "NOT RECOMMENDED" END "RECOMMEND?"
FROM PROB102PAT PAT INNER JOIN PROB102COMP COMP ON PAT.STATE = COMP.STATE WHERE PAT.STATE = STATE1;
END $$
DELIMITER ;
CALL PROB102("AL");

-- PROBLEM 4
CREATE TABLE PlacesAdded(placeID INT PRIMARY KEY AUTO_INCREMENT,
						 placeName VARCHAR(50),
                         placeType VARCHAR(5) CHECK(placeType IN ("city", "state")),
                         timeAdded DATETIME);
            
DROP TRIGGER IF EXISTS PROB104;            
DELIMITER $$
CREATE TRIGGER PROB104
BEFORE INSERT ON ADDRESS
FOR EACH ROW
BEGIN
IF NEW.STATE NOT IN (SELECT DISTINCT(STATE) FROM ADDRESS) THEN 
	INSERT INTO PLACESADDED(PLACENAME, PLACETYPE, TIMEADDED) VALUES(NEW.STATE, "state", NOW());
END IF;
IF NEW.CITY NOT IN (SELECT DISTINCT(CITY) FROM ADDRESS) THEN 
	INSERT INTO PLACESADDED(PLACENAME, PLACETYPE, TIMEADDED) VALUES(NEW.CITY, "city", NOW());
END IF;	
END $$
DELIMITER ;
SELECT * FROM PLACESADDED;
INSERT INTO ADDRESS(ADDRESSID, ADDRESS1, CITY, STATE, ZIP) VALUES(12345, "SHANTINAGAR NAD X ROAD","VIZAG", "AP", 34556);

-- PROBLEM 5
CREATE TABLE KEEP_LOG(ID INT UNIQUE AUTO_INCREMENT,
					  MEDICINEID INT,
                      QUANTITY INT);
                      
DROP TRIGGER IF EXISTS PROB105;
DELIMITER $$
CREATE TRIGGER PROB105
BEFORE UPDATE ON KEEP
FOR EACH ROW
BEGIN
INSERT INTO KEEP_LOG(MEDICINEID, QUANTITY) VALUES (OLD.MEDICINEID, NEW.QUANTITY - OLD.QUANTITY);
END $$
DELIMITER ;
SELECT * FROM KEEP_LOG;